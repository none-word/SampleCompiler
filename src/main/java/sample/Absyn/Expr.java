package sample.Absyn; // Java Package generated by the BNF Converter.

public abstract class Expr implements java.io.Serializable {
  public abstract <R,A> R accept(Expr.Visitor<R,A> v, A arg);
  public interface Visitor <R,A> {
    public R visit(sample.Absyn.Var p, A arg);
    public R visit(sample.Absyn.ConstTrue p, A arg);
    public R visit(sample.Absyn.ConstFalse p, A arg);
    public R visit(sample.Absyn.If p, A arg);
    public R visit(sample.Absyn.FuncCall p, A arg);
    public R visit(sample.Absyn.Func p, A arg);
    public R visit(sample.Absyn.Return p, A arg);
    public R visit(sample.Absyn.TypeAliasing p, A arg);
    public R visit(sample.Absyn.VarTypeAnnotation p, A arg);
    public R visit(sample.Absyn.FuncTypeAnnotation p, A arg);
    public R visit(sample.Absyn.VarTypeAscription p, A arg);
    public R visit(sample.Absyn.FuncTypeAscription p, A arg);
    public R visit(sample.Absyn.EInt p, A arg);
    public R visit(sample.Absyn.EDouble p, A arg);
    public R visit(sample.Absyn.EStr p, A arg);
    public R visit(sample.Absyn.Not p, A arg);
    public R visit(sample.Absyn.And p, A arg);
    public R visit(sample.Absyn.Or p, A arg);
    public R visit(sample.Absyn.ConstZero p, A arg);
    public R visit(sample.Absyn.Succ p, A arg);
    public R visit(sample.Absyn.Pred p, A arg);
    public R visit(sample.Absyn.IsZero p, A arg);
    public R visit(sample.Absyn.OnlyDecl p, A arg);
    public R visit(sample.Absyn.InitDecl p, A arg);
    public R visit(sample.Absyn.InitTableDecl p, A arg);

  }

}
