// File generated by the BNF Converter (bnfc 2.9.4).

package syntax.nameless;

import syntax.nameless.Absyn.*;

/** Abstract Visitor */

public class AbstractVisitor<R,A> implements AllVisitor<R,A> {
    /* Expr */
    public R visit(ConstTrue p, A arg) { return visitDefault(p, arg); }
    public R visit(ConstFalse p, A arg) { return visitDefault(p, arg); }
    public R visit(If p, A arg) { return visitDefault(p, arg); }
    public R visit(ConstZero p, A arg) { return visitDefault(p, arg); }
    public R visit(Succ p, A arg) { return visitDefault(p, arg); }
    public R visit(Pred p, A arg) { return visitDefault(p, arg); }
    public R visit(IsZero p, A arg) { return visitDefault(p, arg); }
    public R visit(FreeVar p, A arg) { return visitDefault(p, arg); }
    public R visit(BoundVar p, A arg) { return visitDefault(p, arg); }
    public R visit(Abstraction p, A arg) { return visitDefault(p, arg); }
    public R visit(Application p, A arg) { return visitDefault(p, arg); }
    public R visitDefault(Expr p, A arg) {
      throw new IllegalArgumentException(this.getClass().getName() + ": " + p);
    }

}
